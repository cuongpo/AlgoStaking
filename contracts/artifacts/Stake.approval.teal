#pragma version 9

// This TEAL was generated by TEALScript v0.59.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// bootstrap()uint64
//
// // mint Token
abi_route_bootstrap:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute bootstrap()uint64
	callsub bootstrap
	int 1
	return

bootstrap:
	proto 1 0

	// contracts/stake.algo.ts:27
	// verifyTxn(this.txn, { sender: this.app.creator })
	// verify sender
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/stake.algo.ts:28
	// stakingToken = sendAssetCreation({
	//       configAssetTotal: 10000,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/stake.algo.ts:29
	// configAssetTotal: 10000
	int 10000
	itxn_field ConfigAssetTotal

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury -1 // stakingToken: asset

	// contracts/stake.algo.ts:32
	// this.stakingToken.value = stakingToken
	byte 0x7374616b696e67546f6b656e // "stakingToken"
	frame_dig -1 // stakingToken: asset
	app_global_put

	// contracts/stake.algo.ts:33
	// return stakingToken;
	frame_dig -1 // stakingToken: asset
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// faucet(asset)void
abi_route_faucet:
	// stakingToken: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute faucet(asset)void
	callsub faucet
	int 1
	return

faucet:
	proto 1 0

	// contracts/stake.algo.ts:37
	// sendAssetTransfer({
	//       xferAsset: this.stakingToken.value,
	//       assetReceiver: this.txn.sender,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/stake.algo.ts:38
	// xferAsset: this.stakingToken.value
	byte 0x7374616b696e67546f6b656e // "stakingToken"
	app_global_get
	itxn_field XferAsset

	// contracts/stake.algo.ts:39
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/stake.algo.ts:40
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// getStakingToken()uint64
abi_route_getStakingToken:
	// execute getStakingToken()uint64
	callsub getStakingToken
	int 1
	return

getStakingToken:
	proto 0 0

	// contracts/stake.algo.ts:45
	// return this.stakingToken.value;
	byte 0x7374616b696e67546f6b656e // "stakingToken"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// createApplication(uint64)void
abi_route_createApplication:
	// duration: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 1 0

	// contracts/stake.algo.ts:49
	// this.duration.value = duration
	byte 0x6475726174696f6e // "duration"
	frame_dig -1 // duration: uint64
	app_global_put
	retsub

// appOptedinAsset(asset)void
//
// // }
abi_route_appOptedinAsset:
	// stakingToken: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute appOptedinAsset(asset)void
	callsub appOptedinAsset
	int 1
	return

appOptedinAsset:
	proto 1 0

	// contracts/stake.algo.ts:87
	// sendAssetTransfer({
	//       xferAsset: this.stakingToken.value,
	//       assetReceiver: this.app.address,
	//       assetAmount: 0,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/stake.algo.ts:88
	// xferAsset: this.stakingToken.value
	byte 0x7374616b696e67546f6b656e // "stakingToken"
	app_global_get
	itxn_field XferAsset

	// contracts/stake.algo.ts:89
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// contracts/stake.algo.ts:90
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// stake(asset,uint64)void
abi_route_stake:
	// stakingToken: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// amount: uint64
	txna ApplicationArgs 1
	btoi

	// execute stake(asset,uint64)void
	callsub stake
	int 1
	return

stake:
	proto 2 0

	// contracts/stake.algo.ts:95
	// assert(amount > 0)
	frame_dig -1 // amount: uint64
	int 0
	>
	assert

	// contracts/stake.algo.ts:98
	// sendAssetTransfer({
	//       sender: this.txn.sender,
	//       xferAsset: this.stakingToken.value,
	//       assetReceiver: this.app.address,
	//       assetAmount: amount,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/stake.algo.ts:99
	// sender: this.txn.sender
	txn Sender
	itxn_field Sender

	// contracts/stake.algo.ts:100
	// xferAsset: this.stakingToken.value
	byte 0x7374616b696e67546f6b656e // "stakingToken"
	app_global_get
	itxn_field XferAsset

	// contracts/stake.algo.ts:101
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// contracts/stake.algo.ts:102
	// assetAmount: amount
	frame_dig -1 // amount: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

create_NoOp:
	method "createApplication(uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "bootstrap()uint64"
	method "faucet(asset)void"
	method "getStakingToken()uint64"
	method "appOptedinAsset(asset)void"
	method "stake(uint64,asset)void"
	txna ApplicationArgs 0
	match abi_route_bootstrap abi_route_faucet abi_route_getStakingToken abi_route_appOptedinAsset abi_route_stake
	err